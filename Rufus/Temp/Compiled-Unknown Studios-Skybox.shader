// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Unknown Studios/Skybox" {
Properties {
 _SkyColor1 ("Top Color", Color) = (0.370000,0.520000,0.730000,0.000000)
 _SkyExponent1 ("Top Exponent", Float) = 2.000000
 _SkyColor2 ("Horizon Color", Color) = (0.890000,0.960000,1.000000,0.000000)
 _SkyIntensity ("Sky Intensity", Float) = 1.750000
 _SunColor ("Sun Color", Color) = (1.000000,0.990000,0.870000,1.000000)
 _SunIntensity ("Sun Intensity", Range(0.000000,20.000000)) = 10.000000
}
SubShader { 
 Tags { "QUEUE"="Background" "RenderType"="Skybox" }


 // Stats for Vertex shader:
 //         d3d9: 10 math
 //        d3d11: 8 math
 // Stats for Fragment shader:
 //         d3d9: 24 math
 //        d3d11: 23 math
 Pass {
  Tags { "QUEUE"="Background" "RenderType"="Skybox" }
  ZWrite Off
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 10 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_ObjectToWorld c0       4
//   unity_MatrixVP      c4       4
//

    vs_3_0
    def c8, 1, 0, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_position o0
    dcl_texcoord o1.xyz
    mad r0, v0.xyzx, c8.xxxy, c8.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    mov o1.xyz, v1
    mad o0.xy, r2.w, c255, r2
    mov o0.zw, r2

// approximately 12 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 24 math
Vector4 _SkyColor1 at 1
Vector4 _SkyColor2 at 2
Float _SkyIntensity at 3
Vector4 _SunColor at 4
Float _SunIntensity at 5
Vector4 _WorldSpaceLightPos0 at 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float3 _SkyColor1;
//   float3 _SkyColor2;
//   float _SkyIntensity;
//   float3 _SunColor;
//   float _SunIntensity;
//   float4 _WorldSpaceLightPos0;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   _SkyColor1           c1       1
//   _SkyColor2           c2       1
//   _SkyIntensity        c3       1
//   _SunColor            c4       1
//   _SunIntensity        c5       1
//

    ps_3_0
    def c6, 1, 0, 550, 0
    dcl_texcoord v0.xyz
    dp3 r0.x, v0, v0
    rsq r0.x, r0.x
    mad r0.y, v0.y, -r0.x, c6.x
    mul r0.xzw, r0.x, v0.xyyz
    add r1.x, -r0.y, c6.x
    log r0.y, r0.y
    cmp r0.y, r1.x, r0.y, c6.y
    mul r1.x, r0.w, r0.x
    dp3 r0.x, r0.xzww, c0
    max r1.y, r0.x, c6.y
    pow_sat r0.x, r1.y, c6.z
    mul_pp r0.xzw, r0.x, c4.xyyz
    mul_pp r0.xzw, r0, c5.x
    exp r1.x, -r1.x
    mul r0.y, r0.y, r1.x
    exp r0.y, r0.y
    add r0.y, -r0.y, c6.x
    add r1.x, -r0.y, c6.x
    mul r1.xyz, r1.x, c2
    mad_pp r1.xyz, c1, r0.y, r1
    mad_pp oC0.xyz, r1, c3.x, r0.xzww
    mov_pp oC0.w, c6.y

// approximately 24 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 8 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord"

Constant Buffer "UnityPerDraw" (160 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb1[18].xyzw
   5: mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
   8: mov o1.xyz, v1.xyzx
   9: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 23 math, 2 temp registers
Constant Buffer "$Globals" (80 bytes) on slot 0 {
  Vector3 _SkyColor1 at 32
  Vector3 _SkyColor2 at 48
  Float _SkyIntensity at 60
  Vector3 _SunColor at 64
  Float _SunIntensity at 76
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: dp3 r0.x, v1.xyzx, v1.xyzx
   1: rsq r0.x, r0.x
   2: mad r0.y, -v1.y, r0.x, l(1.000000)
   3: mul r0.xzw, r0.xxxx, v1.xxyz
   4: min r0.y, r0.y, l(1.000000)
   5: log r0.y, r0.y
   6: mul r1.x, r0.w, r0.x
   7: dp3 r0.x, r0.xzwx, cb1[0].xyzx
   8: max r0.x, r0.x, l(0.000000)
   9: log r0.x, r0.x
  10: mul r0.x, r0.x, l(550.000000)
  11: exp r0.x, r0.x
  12: min r0.x, r0.x, l(1.000000)
  13: mul r0.xzw, r0.xxxx, cb0[4].xxyz
  14: mul r0.xzw, r0.xxzw, cb0[4].wwww
  15: exp r1.x, -r1.x
  16: mul r0.y, r0.y, r1.x
  17: exp r0.y, r0.y
  18: add r0.y, -r0.y, l(1.000000)
  19: add r1.x, -r0.y, l(1.000000)
  20: mul r1.xyz, r1.xxxx, cb0[3].xyzx
  21: mad r1.xyz, cb0[2].xyzx, r0.yyyy, r1.xyzx
  22: mad o0.xyz, r1.xyzx, cb0[3].wwww, r0.xzwx
  23: mov o0.w, l(0)
  24: ret 
// Approximately 0 instruction slots used


 }
}
}