// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Skybox/Procedural" {
Properties {
[KeywordEnum(None, Simple, High Quality)]  _SunDisk ("Sun", Float) = 2.000000
 _SunSize ("Sun Size", Range(0.000000,1.000000)) = 0.040000
 _AtmosphereThickness ("Atmosphere Thickness", Range(0.000000,5.000000)) = 1.000000
 _SkyTint ("Sky Tint", Color) = (0.500000,0.500000,0.500000,1.000000)
 _GroundColor ("Ground", Color) = (0.369000,0.349000,0.341000,1.000000)
 _Exposure ("Exposure", Range(0.000000,8.000000)) = 1.300000
}
SubShader { 
 Tags { "QUEUE"="Background" "RenderType"="Background" "PreviewType"="Skybox" }


 // Stats for Vertex shader:
 //         d3d9: 174 avg math (173..175), 5 branch
 //        d3d11: 157 avg math (156..158), 2 branch
 // Stats for Fragment shader:
 //         d3d9: 17 avg math (5..29)
 //        d3d11: 13 avg math (2..23)
 Pass {
  Tags { "QUEUE"="Background" "RenderType"="Background" "PreviewType"="Skybox" }
  ZWrite Off
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: _SUNDISK_NONE 
-- Vertex shader for "d3d9":
// Stats: 173 math, 5 branches
Uses vertex data channel "Vertex"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Float _AtmosphereThickness at 12
Float _Exposure at 9
Vector4 _GroundColor at 10
Vector4 _SkyTint at 11
Vector4 _WorldSpaceLightPos0 at 8

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _AtmosphereThickness;
//   float _Exposure;
//   float3 _GroundColor;
//   float3 _SkyTint;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   _WorldSpaceLightPos0 c8       1
//   _Exposure            c9       1
//   _GroundColor         c10      1
//   _SkyTint             c11      1
//   _AtmosphereThickness c12      1
//

    vs_3_0
    def c13, 0.5, 0.419999987, 0.324999988, 0.0506249666
    def c14, 0.300000012, 0.300000042, 0.049999997, 0.0314159282
    def c15, 0.5, 20, 0, 1.00010002
    def c16, -0.00286999997, 1.44269502, 0.246031836, 230.831207
    def c17, 5.25, -6.80000019, 3.82999992, 0.458999991
    def c18, 0.25, 50, 0.0125663709, 0.0199999996
    def c19, -0.00100000005, -9.99999975e-005, -4.99999987e-005, -0.00199999986
    def c20, 1, 0, 0.454545468, 2.5
    def c21, 0.25, 0.249900013, 0.75, 0
    dcl_position v0
    dcl_position o0
    dcl_texcoord o1.x
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r8.x, c4, r1
    dp4 r8.y, c5, r1
    dp4 r8.z, c6, r1
    dp4 r8.w, c7, r1
    log r0.x, c11.x
    log r0.y, c11.y
    log r0.z, c11.z
    mul r0.xyz, r0, c20.z
    exp r1.x, r0.x
    exp r1.y, r0.y
    exp r1.z, r0.z
    add r0.xyz, -r1, c20.x
    mov r1.xy, c14
    mad r0.xyz, r0, r1.xyxw, c13
    mul r0.xyz, r0, r0
    mul r0.xyz, r0, r0
    rcp r1.x, r0.x
    rcp r1.y, r0.y
    rcp r1.z, r0.z
    mov r0.w, c20.w
    pow r1.w, c12.x, r0.w
    mul r0.xy, r1.w, c14.zwzw
    dp3 r2.x, c0, v0
    dp3 r2.y, c1, v0
    dp3 r2.z, c2, v0
    dp3 r0.z, r2, r2
    rsq r0.z, r0.z
    mul r2.xzw, r0.z, r2.yyxz
    if_ge r2.x, c20.y
      mad r0.w, r2.x, r2.x, c13.w
      rsq r0.w, r0.w
      rcp r0.w, r0.w
      mad r0.z, r2.y, -r0.z, r0.w
      add r0.w, -r2.x, c20.x
      mad r1.w, r0.w, c17.x, c17.y
      mad r1.w, r0.w, r1.w, c17.z
      mad r1.w, r0.w, r1.w, c17.w
      mad r0.w, r0.w, r1.w, c16.x
      mul r0.w, r0.w, c16.y
      exp r0.w, r0.w
      mul r3.xy, r0.z, c15
      mul r4.xyz, r2.zxww, r3.x
      mad r4.xyz, r4, c15.x, c15.zwzw
      dp3 r0.z, r4, r4
      rsq r0.z, r0.z
      rcp r1.w, r0.z
      add r1.w, -r1.w, c20.x
      mul r1.w, r1.w, c16.w
      exp r1.w, r1.w
      dp3 r2.y, c8, r4
      dp3 r3.z, r2.zxww, r4
      mad r2.y, r2.y, -r0.z, c20.x
      mad r3.w, r2.y, c17.x, c17.y
      mad r3.w, r2.y, r3.w, c17.z
      mad r3.w, r2.y, r3.w, c17.w
      mad r2.y, r2.y, r3.w, c16.x
      mul r2.y, r2.y, c16.y
      exp r2.y, r2.y
      mad r0.z, r3.z, -r0.z, c20.x
      mad r3.z, r0.z, c17.x, c17.y
      mad r3.z, r0.z, r3.z, c17.z
      mad r3.z, r0.z, r3.z, c17.w
      mad r0.z, r0.z, r3.z, c16.x
      mul r0.zw, r0, c16.xyyz
      exp r0.z, r0.z
      mul r0.z, r0.z, c18.x
      mad r0.z, r2.y, c18.x, -r0.z
      mad r0.z, r1.w, r0.z, r0.w
      max r0.z, r0.z, c20.y
      min r0.z, r0.z, c18.y
      mad r5.xyz, r1, r0.y, c18.z
      mul r6.xyz, -r0.z, r5
      mul r6.xyz, r6, c16.y
      exp r7.x, r6.x
      exp r7.y, r6.y
      exp r7.z, r6.z
      mul r0.z, r3.y, r1.w
      mad r3.xzw, r2.zyxw, r3.x, r4.xyyz
      dp3 r1.w, r3.xzww, r3.xzww
      rsq r1.w, r1.w
      rcp r2.y, r1.w
      add r2.y, -r2.y, c20.x
      mul r2.y, r2.y, c16.w
      exp r2.y, r2.y
      dp3 r4.x, c8, r3.xzww
      dp3 r3.x, r2.zxww, r3.xzww
      mad r3.z, r4.x, -r1.w, c20.x
      mad r3.w, r3.z, c17.x, c17.y
      mad r3.w, r3.z, r3.w, c17.z
      mad r3.w, r3.z, r3.w, c17.w
      mad r3.z, r3.z, r3.w, c16.x
      mul r3.z, r3.z, c16.y
      exp r3.z, r3.z
      mad r1.w, r3.x, -r1.w, c20.x
      mad r3.x, r1.w, c17.x, c17.y
      mad r3.x, r1.w, r3.x, c17.z
      mad r3.x, r1.w, r3.x, c17.w
      mad r1.w, r1.w, r3.x, c16.x
      mul r1.w, r1.w, c16.y
      exp r1.w, r1.w
      mul r1.w, r1.w, c18.x
      mad r1.w, r3.z, c18.x, -r1.w
      mad r0.w, r2.y, r1.w, r0.w
      max r0.w, r0.w, c20.y
      min r0.w, r0.w, c18.y
      mul r3.xzw, r5.xyyz, -r0.w
      mul r3.xzw, r3, c16.y
      exp r4.x, r3.x
      exp r4.y, r3.z
      exp r4.z, r3.w
      mul r0.w, r3.y, r2.y
      mul r3.xyz, r0.w, r4
      mad r3.xyz, r7, r0.z, r3
      mul r4.xyz, r0.x, r1
      mul r4.xyz, r3, r4
      mul r3.xyz, r3, c18.w
    else
      min r0.z, r2.x, c19.x
      rcp r0.z, r0.z
      mul r5.xyz, r0.z, c19.yzww
      mad r6.xyz, r5.x, r2.zxww, c15.zwzw
      dp3 r0.z, -r2.zxww, r6
      dp3 r0.w, c8, r6
      add r0.zw, -r0, c20.x
      mad r1.w, r0.z, c17.x, c17.y
      mad r1.w, r0.z, r1.w, c17.z
      mad r1.w, r0.z, r1.w, c17.w
      mad r0.z, r0.z, r1.w, c16.x
      mul r0.z, r0.z, c16.y
      exp r0.z, r0.z
      mad r1.w, r0.w, c17.x, c17.y
      mad r1.w, r0.w, r1.w, c17.z
      mad r1.w, r0.w, r1.w, c17.w
      mad r0.w, r0.w, r1.w, c16.x
      mul r0.w, r0.w, c16.y
      exp r0.w, r0.w
      mul r5.xw, r0.z, c21.xyzy
      mad r0.z, r0.w, c18.x, r5.x
      mul r6.xyz, r2.zxww, r5.y
      mad r6.xyz, r6, c15.x, c15.zwzw
      dp3 r0.w, r6, r6
      rsq r0.w, r0.w
      rcp r0.w, r0.w
      add r0.w, -r0.w, c20.x
      mul r0.w, r0.w, c16.w
      exp r0.w, r0.w
      mad r0.z, r0.w, r0.z, -r5.w
      max r0.z, r0.z, c20.y
      min r0.z, r0.z, c18.y
      mad r5.xyw, r1.xyzz, r0.y, c18.z
      mul r5.xyw, -r0.z, r5
      mul r5.xyw, r5, c16.y
      exp r6.x, r5.x
      exp r6.y, r5.y
      exp r6.z, r5.w
      mul r0.y, r5.z, r0.w
      mul r0.yzw, r0.y, r6.xxyz
      mad r1.xyz, r1, r0.x, c18.w
      mul r4.xyz, r0.yzww, r1
      min r3.xyz, r6, c20.x
    endif
    mul o1.x, r2.x, -c18.y
    mad r0.xyz, c10, r3, r4
    mul o2.xyz, r0, c9.x
    dp3 r0.x, c8.yxzw, -r2.xzww
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c21.z, c21.z
    mul r0.xyz, r0.x, r4
    mul o3.xyz, r0, c9.x
    mad o0.xy, r8.w, c255, r8
    mov o0.zw, r8

// approximately 180 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 5 math
Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
    ps_3_0
    def c0, 1, 0, 0, 0
    dcl_texcoord_pp v0.x
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    mov_sat_pp r0.x, v0.x
    mov r1.xyz, v2
    add_pp r0.yzw, -r1.xxyz, v1.xxyz
    mad_pp oC0.xyz, r0.x, r0.yzww, v2
    mov_pp oC0.w, c0.x

// approximately 5 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 156 math, 7 temp registers, 2 branches
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _Exposure at 64
  Vector3 _GroundColor at 68
  Vector3 _SkyTint at 84
  Float _AtmosphereThickness at 96
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 1    yzw        1     NONE   float    yzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.x
      dcl_output o1.yzw
      dcl_output o2.xyz
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   5: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   8: log r1.xyz, cb0[5].yzwy
   9: mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
  10: exp r1.xyz, r1.xyzx
  11: add r1.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  12: mad r1.xyz, r1.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), l(0.500000, 0.420000, 0.325000, 0.000000)
  13: mul r1.xyz, r1.xyzx, r1.xyzx
  14: mul r1.xyz, r1.xyzx, r1.xyzx
  15: div r1.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzx
  16: log r0.w, cb0[6].x
  17: mul r0.w, r0.w, l(2.500000)
  18: exp r0.w, r0.w
  19: mul r2.xy, r0.wwww, l(0.050000, 0.031416, 0.000000, 0.000000)
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: rsq r0.w, r0.w
  22: mul r3.xyz, r0.wwww, r0.xyzx
  23: ge r0.x, r3.y, l(0.000000)
  24: if_nz r0.x
  25:   mad r0.x, r3.y, r3.y, l(0.050625)
  26:   sqrt r0.x, r0.x
  27:   mad r0.x, -r0.y, r0.w, r0.x
  28:   mad r0.y, -r3.y, l(1.000000), l(1.000000)
  29:   mad r0.z, r0.y, l(5.250000), l(-6.800000)
  30:   mad r0.z, r0.y, r0.z, l(3.830000)
  31:   mad r0.z, r0.y, r0.z, l(0.459000)
  32:   mad r0.y, r0.y, r0.z, l(-0.002870)
  33:   mul r0.y, r0.y, l(1.442695)
  34:   exp r0.y, r0.y
  35:   mul r0.xyz, r0.xyxx, l(0.500000, 0.246032, 20.000000, 0.000000)
  36:   mul r4.xyz, r0.xxxx, r3.xyzx
  37:   mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.000000, 1.000100, 0.000000, 0.000000)
  38:   dp3 r0.w, r4.xyzx, r4.xyzx
  39:   sqrt r0.w, r0.w
  40:   add r1.w, -r0.w, l(1.000000)
  41:   mul r1.w, r1.w, l(230.831207)
  42:   exp r1.w, r1.w
  43:   dp3 r2.z, cb1[0].xyzx, r4.xyzx
  44:   div r2.z, r2.z, r0.w
  45:   dp3 r2.w, r3.xyzx, r4.xyzx
  46:   div r0.w, r2.w, r0.w
  47:   add r2.z, -r2.z, l(1.000000)
  48:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
  49:   mad r2.w, r2.z, r2.w, l(3.830000)
  50:   mad r2.w, r2.z, r2.w, l(0.459000)
  51:   mad r2.z, r2.z, r2.w, l(-0.002870)
  52:   mul r2.z, r2.z, l(1.442695)
  53:   exp r2.z, r2.z
  54:   add r0.w, -r0.w, l(1.000000)
  55:   mad r2.w, r0.w, l(5.250000), l(-6.800000)
  56:   mad r2.w, r0.w, r2.w, l(3.830000)
  57:   mad r2.w, r0.w, r2.w, l(0.459000)
  58:   mad r0.w, r0.w, r2.w, l(-0.002870)
  59:   mul r0.w, r0.w, l(1.442695)
  60:   exp r0.w, r0.w
  61:   mul r0.w, r0.w, l(0.250000)
  62:   mad r0.w, r2.z, l(0.250000), -r0.w
  63:   mad r0.w, r1.w, r0.w, r0.y
  64:   max r0.w, r0.w, l(0.000000)
  65:   min r0.w, r0.w, l(50.000000)
  66:   mad r5.xyz, r1.xyzx, r2.yyyy, l(0.012566, 0.012566, 0.012566, 0.000000)
  67:   mul r6.xyz, -r0.wwww, r5.xyzx
  68:   mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  69:   exp r6.xyz, r6.xyzx
  70:   mul r0.w, r0.z, r1.w
  71:   mad r4.xyz, r3.xyzx, r0.xxxx, r4.xyzx
  72:   dp3 r0.x, r4.xyzx, r4.xyzx
  73:   sqrt r0.x, r0.x
  74:   add r1.w, -r0.x, l(1.000000)
  75:   mul r1.w, r1.w, l(230.831207)
  76:   exp r1.w, r1.w
  77:   dp3 r2.z, cb1[0].xyzx, r4.xyzx
  78:   div r2.z, r2.z, r0.x
  79:   dp3 r2.w, r3.xyzx, r4.xyzx
  80:   div r0.x, r2.w, r0.x
  81:   add r2.z, -r2.z, l(1.000000)
  82:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
  83:   mad r2.w, r2.z, r2.w, l(3.830000)
  84:   mad r2.w, r2.z, r2.w, l(0.459000)
  85:   mad r2.z, r2.z, r2.w, l(-0.002870)
  86:   mul r2.z, r2.z, l(1.442695)
  87:   exp r2.z, r2.z
  88:   add r0.x, -r0.x, l(1.000000)
  89:   mad r2.w, r0.x, l(5.250000), l(-6.800000)
  90:   mad r2.w, r0.x, r2.w, l(3.830000)
  91:   mad r2.w, r0.x, r2.w, l(0.459000)
  92:   mad r0.x, r0.x, r2.w, l(-0.002870)
  93:   mul r0.x, r0.x, l(1.442695)
  94:   exp r0.x, r0.x
  95:   mul r0.x, r0.x, l(0.250000)
  96:   mad r0.x, r2.z, l(0.250000), -r0.x
  97:   mad r0.x, r1.w, r0.x, r0.y
  98:   max r0.x, r0.x, l(0.000000)
  99:   min r0.x, r0.x, l(50.000000)
 100:   mul r4.xyz, r5.xyzx, -r0.xxxx
 101:   mul r4.xyz, r4.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
 102:   exp r4.xyz, r4.xyzx
 103:   mul r0.x, r0.z, r1.w
 104:   mul r0.xyz, r0.xxxx, r4.xyzx
 105:   mad r0.xyz, r6.xyzx, r0.wwww, r0.xyzx
 106:   mul r4.xyz, r1.xyzx, r2.xxxx
 107:   mul r4.xyz, r0.xyzx, r4.xyzx
 108:   mul r0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000)
 109: else 
 110:   min r0.w, r3.y, l(-0.001000)
 111:   div r0.w, l(-0.000100), r0.w
 112:   mad r5.xyz, r0.wwww, r3.xyzx, l(0.000000, 1.000100, 0.000000, 0.000000)
 113:   dp3 r1.w, -r3.xyzx, r5.xyzx
 114:   dp3 r2.z, cb1[0].xyzx, r5.xyzx
 115:   add r1.w, -r1.w, l(1.000000)
 116:   mad r2.w, r1.w, l(5.250000), l(-6.800000)
 117:   mad r2.w, r1.w, r2.w, l(3.830000)
 118:   mad r2.w, r1.w, r2.w, l(0.459000)
 119:   mad r1.w, r1.w, r2.w, l(-0.002870)
 120:   mul r1.w, r1.w, l(1.442695)
 121:   exp r1.w, r1.w
 122:   add r2.z, -r2.z, l(1.000000)
 123:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
 124:   mad r2.w, r2.z, r2.w, l(3.830000)
 125:   mad r2.w, r2.z, r2.w, l(0.459000)
 126:   mad r2.z, r2.z, r2.w, l(-0.002870)
 127:   mul r2.z, r2.z, l(1.442695)
 128:   exp r2.z, r2.z
 129:   mul r5.xy, r1.wwww, l(0.250000, 0.249900, 0.000000, 0.000000)
 130:   mad r1.w, r2.z, l(0.250000), r5.x
 131:   mul r2.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 20.000000)
 132:   mul r5.xzw, r2.zzzz, r3.xxyz
 133:   mad r5.xzw, r5.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 1.000100, 0.000000)
 134:   dp3 r0.w, r5.xzwx, r5.xzwx
 135:   sqrt r0.w, r0.w
 136:   add r0.w, -r0.w, l(1.000000)
 137:   mul r0.w, r0.w, l(230.831207)
 138:   exp r0.w, r0.w
 139:   mad r1.w, r0.w, r1.w, -r5.y
 140:   max r1.w, r1.w, l(0.000000)
 141:   min r1.w, r1.w, l(50.000000)
 142:   mad r5.xyz, r1.xyzx, r2.yyyy, l(0.012566, 0.012566, 0.012566, 0.000000)
 143:   mul r5.xyz, -r1.wwww, r5.xyzx
 144:   mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
 145:   exp r0.xyz, r5.xyzx
 146:   mul r0.w, r2.w, r0.w
 147:   mul r2.yzw, r0.wwww, r0.xxyz
 148:   mad r1.xyz, r1.xyzx, r2.xxxx, l(0.020000, 0.020000, 0.020000, 0.000000)
 149:   mul r4.xyz, r1.xyzx, r2.yzwy
 150: endif 
 151: mul o1.x, r3.y, l(-50.000000)
 152: mad r0.xyz, cb0[4].yzwy, r0.xyzx, r4.xyzx
 153: mul o1.yzw, r0.xxyz, cb0[4].xxxx
 154: dp3 r0.x, cb1[0].xyzx, -r3.xyzx
 155: mul r0.x, r0.x, r0.x
 156: mad r0.x, r0.x, l(0.750000), l(0.750000)
 157: mul r0.xyz, r0.xxxx, r4.xyzx
 158: mul o2.xyz, r0.xyzx, cb0[4].xxxx
 159: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   x           1     NONE   float   x   
// TEXCOORD                 1    yzw        1     NONE   float    yzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_input_ps linear v1.x
      dcl_input_ps linear v1.yzw
      dcl_input_ps linear v2.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: mov_sat r0.x, v1.x
   1: add r0.yzw, v1.yyzw, -v2.xxyz
   2: mad o0.xyz, r0.xxxx, r0.yzwy, v2.xyzx
   3: mov o0.w, l(1.000000)
   4: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 175 math, 5 branches
Uses vertex data channel "Vertex"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Float _AtmosphereThickness at 13
Float _Exposure at 10
Vector4 _GroundColor at 11
Vector4 _LightColor0 at 9
Vector4 _SkyTint at 12
Vector4 _WorldSpaceLightPos0 at 8

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _AtmosphereThickness;
//   float _Exposure;
//   float3 _GroundColor;
//   float4 _LightColor0;
//   float3 _SkyTint;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   _WorldSpaceLightPos0 c8       1
//   _LightColor0         c9       1
//   _Exposure            c10      1
//   _GroundColor         c11      1
//   _SkyTint             c12      1
//   _AtmosphereThickness c13      1
//

    vs_3_0
    def c14, 0.5, 0.419999987, 0.324999988, 0.0506249666
    def c15, 0.300000012, 0.300000042, 0.049999997, 0.0314159282
    def c16, 0.5, 20, 0, 1.00010002
    def c17, -0.00286999997, 1.44269502, 0.246031836, 230.831207
    def c18, 5.25, -6.80000019, 3.82999992, 0.458999991
    def c19, 0.25, 50, 0.0125663709, 0.0199999996
    def c20, -0.00100000005, -9.99999975e-005, -4.99999987e-005, -0.00199999986
    def c21, 0.25, 0.249900013, 0.75, 0
    def c22, 1, 0, 0.454545468, 2.5
    dcl_position v0
    dcl_position o0
    dcl_texcoord o1.xyz
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r8.x, c4, r1
    dp4 r8.y, c5, r1
    dp4 r8.z, c6, r1
    dp4 r8.w, c7, r1
    log r0.x, c12.x
    log r0.y, c12.y
    log r0.z, c12.z
    mul r0.xyz, r0, c22.z
    exp r1.x, r0.x
    exp r1.y, r0.y
    exp r1.z, r0.z
    add r0.xyz, -r1, c22.x
    mov r1.xy, c15
    mad r0.xyz, r0, r1.xyxw, c14
    mul r0.xyz, r0, r0
    mul r0.xyz, r0, r0
    rcp r1.x, r0.x
    rcp r1.y, r0.y
    rcp r1.z, r0.z
    mov r0.w, c22.w
    pow r1.w, c13.x, r0.w
    mul r0.xy, r1.w, c15.zwzw
    dp3 r2.x, c0, v0
    dp3 r2.y, c1, v0
    dp3 r2.z, c2, v0
    dp3 r0.z, r2, r2
    rsq r0.z, r0.z
    mul r2.xzw, r0.z, r2.yyxz
    if_ge r2.x, c22.y
      mad r0.w, r2.x, r2.x, c14.w
      rsq r0.w, r0.w
      rcp r0.w, r0.w
      mad r0.z, r2.y, -r0.z, r0.w
      add r0.w, -r2.x, c22.x
      mad r1.w, r0.w, c18.x, c18.y
      mad r1.w, r0.w, r1.w, c18.z
      mad r1.w, r0.w, r1.w, c18.w
      mad r0.w, r0.w, r1.w, c17.x
      mul r0.w, r0.w, c17.y
      exp r0.w, r0.w
      mul r3.xy, r0.z, c16
      mul r4.xyz, r2.zxww, r3.x
      mad r4.xyz, r4, c16.x, c16.zwzw
      dp3 r0.z, r4, r4
      rsq r0.z, r0.z
      rcp r1.w, r0.z
      add r1.w, -r1.w, c22.x
      mul r1.w, r1.w, c17.w
      exp r1.w, r1.w
      dp3 r2.y, c8, r4
      dp3 r3.z, r2.zxww, r4
      mad r2.y, r2.y, -r0.z, c22.x
      mad r3.w, r2.y, c18.x, c18.y
      mad r3.w, r2.y, r3.w, c18.z
      mad r3.w, r2.y, r3.w, c18.w
      mad r2.y, r2.y, r3.w, c17.x
      mul r2.y, r2.y, c17.y
      exp r2.y, r2.y
      mad r0.z, r3.z, -r0.z, c22.x
      mad r3.z, r0.z, c18.x, c18.y
      mad r3.z, r0.z, r3.z, c18.z
      mad r3.z, r0.z, r3.z, c18.w
      mad r0.z, r0.z, r3.z, c17.x
      mul r0.zw, r0, c17.xyyz
      exp r0.z, r0.z
      mul r0.z, r0.z, c19.x
      mad r0.z, r2.y, c19.x, -r0.z
      mad r0.z, r1.w, r0.z, r0.w
      max r0.z, r0.z, c22.y
      min r0.z, r0.z, c19.y
      mad r5.xyz, r1, r0.y, c19.z
      mul r6.xyz, -r0.z, r5
      mul r6.xyz, r6, c17.y
      exp r7.x, r6.x
      exp r7.y, r6.y
      exp r7.z, r6.z
      mul r0.z, r3.y, r1.w
      mad r3.xzw, r2.zyxw, r3.x, r4.xyyz
      dp3 r1.w, r3.xzww, r3.xzww
      rsq r1.w, r1.w
      rcp r2.y, r1.w
      add r2.y, -r2.y, c22.x
      mul r2.y, r2.y, c17.w
      exp r2.y, r2.y
      dp3 r4.x, c8, r3.xzww
      dp3 r3.x, r2.zxww, r3.xzww
      mad r3.z, r4.x, -r1.w, c22.x
      mad r3.w, r3.z, c18.x, c18.y
      mad r3.w, r3.z, r3.w, c18.z
      mad r3.w, r3.z, r3.w, c18.w
      mad r3.z, r3.z, r3.w, c17.x
      mul r3.z, r3.z, c17.y
      exp r3.z, r3.z
      mad r1.w, r3.x, -r1.w, c22.x
      mad r3.x, r1.w, c18.x, c18.y
      mad r3.x, r1.w, r3.x, c18.z
      mad r3.x, r1.w, r3.x, c18.w
      mad r1.w, r1.w, r3.x, c17.x
      mul r1.w, r1.w, c17.y
      exp r1.w, r1.w
      mul r1.w, r1.w, c19.x
      mad r1.w, r3.z, c19.x, -r1.w
      mad r0.w, r2.y, r1.w, r0.w
      max r0.w, r0.w, c22.y
      min r0.w, r0.w, c19.y
      mul r3.xzw, r5.xyyz, -r0.w
      mul r3.xzw, r3, c17.y
      exp r4.x, r3.x
      exp r4.y, r3.z
      exp r4.z, r3.w
      mul r0.w, r3.y, r2.y
      mul r3.xyz, r0.w, r4
      mad r3.xyz, r7, r0.z, r3
      mul r4.xyz, r0.x, r1
      mul r4.xyz, r3, r4
      mul r3.xyz, r3, c19.w
    else
      min r0.z, r2.x, c20.x
      rcp r0.z, r0.z
      mul r5.xyz, r0.z, c20.yzww
      mad r6.xyz, r5.x, r2.zxww, c16.zwzw
      dp3 r0.z, -r2.zxww, r6
      dp3 r0.w, c8, r6
      add r0.zw, -r0, c22.x
      mad r1.w, r0.z, c18.x, c18.y
      mad r1.w, r0.z, r1.w, c18.z
      mad r1.w, r0.z, r1.w, c18.w
      mad r0.z, r0.z, r1.w, c17.x
      mul r0.z, r0.z, c17.y
      exp r0.z, r0.z
      mad r1.w, r0.w, c18.x, c18.y
      mad r1.w, r0.w, r1.w, c18.z
      mad r1.w, r0.w, r1.w, c18.w
      mad r0.w, r0.w, r1.w, c17.x
      mul r0.w, r0.w, c17.y
      exp r0.w, r0.w
      mul r5.xw, r0.z, c21.xyzy
      mad r0.z, r0.w, c19.x, r5.x
      mul r6.xyz, r2.zxww, r5.y
      mad r6.xyz, r6, c16.x, c16.zwzw
      dp3 r0.w, r6, r6
      rsq r0.w, r0.w
      rcp r0.w, r0.w
      add r0.w, -r0.w, c22.x
      mul r0.w, r0.w, c17.w
      exp r0.w, r0.w
      mad r0.z, r0.w, r0.z, -r5.w
      max r0.z, r0.z, c22.y
      min r0.z, r0.z, c19.y
      mad r5.xyw, r1.xyzz, r0.y, c19.z
      mul r5.xyw, -r0.z, r5
      mul r5.xyw, r5, c17.y
      exp r6.x, r5.x
      exp r6.y, r5.y
      exp r6.z, r5.w
      mul r0.y, r5.z, r0.w
      mul r0.yzw, r0.y, r6.xxyz
      mad r1.xyz, r1, r0.x, c19.w
      mul r4.xyz, r0.yzww, r1
      min r3.xyz, r6, c22.x
    endif
    mad r0.xyz, c11, r3, r4
    mul o2.xyz, r0, c10.x
    dp3 r0.x, c8.yxzw, -r2.xzww
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c21.z, c21.z
    mul r0.xyz, r0.x, r4
    mul o3.xyz, r0, c10.x
    mul r0.xyz, r3, c9
    mul o4.xyz, r0, c10.x
    mov o1.xyz, -r2.zxww
    mad o0.xy, r8.w, c255, r8
    mov o0.zw, r8

// approximately 182 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 18 math
Float _SunSize at 1
Vector4 _WorldSpaceLightPos0 at 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _SunSize;
//   float4 _WorldSpaceLightPos0;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   _SunSize             c1       1
//

    ps_3_0
    def c2, 50, -2, 3, 1
    def c3, 8000, 0, 0, 0
    dcl_texcoord_pp v0.xyz
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    add_pp r0.xyz, c0, v0
    dp3_pp r0.x, r0, r0
    rsq_pp r0.x, r0.x
    rcp_pp r0.x, r0.x
    rcp_pp r0.y, c1.x
    mul_sat_pp r0.x, r0.y, r0.x
    mad_pp r0.y, r0.x, c2.y, c2.z
    mul_pp r0.x, r0.x, r0.x
    mad_pp r0.x, r0.y, -r0.x, c2.w
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, c3.x
    mul_sat_pp r0.y, c2.x, v0.y
    mov r1.xyz, v2
    add_pp r1.xyz, -r1, v1
    mad_pp r0.yzw, r0.y, r1.xxyz, v2.xxyz
    mad_pp r1.xyz, r0.x, v3, r0.yzww
    cmp_pp oC0.xyz, v0.y, r0.yzww, r1
    mov_pp oC0.w, c2.w

// approximately 18 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 157 math, 7 temp registers, 2 branches
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Exposure at 64
  Vector3 _GroundColor at 68
  Vector3 _SkyTint at 84
  Float _AtmosphereThickness at 96
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   5: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   8: log r1.xyz, cb0[5].yzwy
   9: mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
  10: exp r1.xyz, r1.xyzx
  11: add r1.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  12: mad r1.xyz, r1.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), l(0.500000, 0.420000, 0.325000, 0.000000)
  13: mul r1.xyz, r1.xyzx, r1.xyzx
  14: mul r1.xyz, r1.xyzx, r1.xyzx
  15: div r1.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzx
  16: log r0.w, cb0[6].x
  17: mul r0.w, r0.w, l(2.500000)
  18: exp r0.w, r0.w
  19: mul r2.xy, r0.wwww, l(0.050000, 0.031416, 0.000000, 0.000000)
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: rsq r0.w, r0.w
  22: mul r3.xyz, r0.wwww, r0.xyzx
  23: ge r0.x, r3.y, l(0.000000)
  24: if_nz r0.x
  25:   mad r0.x, r3.y, r3.y, l(0.050625)
  26:   sqrt r0.x, r0.x
  27:   mad r0.x, -r0.y, r0.w, r0.x
  28:   mad r0.y, -r3.y, l(1.000000), l(1.000000)
  29:   mad r0.z, r0.y, l(5.250000), l(-6.800000)
  30:   mad r0.z, r0.y, r0.z, l(3.830000)
  31:   mad r0.z, r0.y, r0.z, l(0.459000)
  32:   mad r0.y, r0.y, r0.z, l(-0.002870)
  33:   mul r0.y, r0.y, l(1.442695)
  34:   exp r0.y, r0.y
  35:   mul r0.xyz, r0.xyxx, l(0.500000, 0.246032, 20.000000, 0.000000)
  36:   mul r4.xyz, r0.xxxx, r3.xyzx
  37:   mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.000000, 1.000100, 0.000000, 0.000000)
  38:   dp3 r0.w, r4.xyzx, r4.xyzx
  39:   sqrt r0.w, r0.w
  40:   add r1.w, -r0.w, l(1.000000)
  41:   mul r1.w, r1.w, l(230.831207)
  42:   exp r1.w, r1.w
  43:   dp3 r2.z, cb1[0].xyzx, r4.xyzx
  44:   div r2.z, r2.z, r0.w
  45:   dp3 r2.w, r3.xyzx, r4.xyzx
  46:   div r0.w, r2.w, r0.w
  47:   add r2.z, -r2.z, l(1.000000)
  48:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
  49:   mad r2.w, r2.z, r2.w, l(3.830000)
  50:   mad r2.w, r2.z, r2.w, l(0.459000)
  51:   mad r2.z, r2.z, r2.w, l(-0.002870)
  52:   mul r2.z, r2.z, l(1.442695)
  53:   exp r2.z, r2.z
  54:   add r0.w, -r0.w, l(1.000000)
  55:   mad r2.w, r0.w, l(5.250000), l(-6.800000)
  56:   mad r2.w, r0.w, r2.w, l(3.830000)
  57:   mad r2.w, r0.w, r2.w, l(0.459000)
  58:   mad r0.w, r0.w, r2.w, l(-0.002870)
  59:   mul r0.w, r0.w, l(1.442695)
  60:   exp r0.w, r0.w
  61:   mul r0.w, r0.w, l(0.250000)
  62:   mad r0.w, r2.z, l(0.250000), -r0.w
  63:   mad r0.w, r1.w, r0.w, r0.y
  64:   max r0.w, r0.w, l(0.000000)
  65:   min r0.w, r0.w, l(50.000000)
  66:   mad r5.xyz, r1.xyzx, r2.yyyy, l(0.012566, 0.012566, 0.012566, 0.000000)
  67:   mul r6.xyz, -r0.wwww, r5.xyzx
  68:   mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  69:   exp r6.xyz, r6.xyzx
  70:   mul r0.w, r0.z, r1.w
  71:   mad r4.xyz, r3.xyzx, r0.xxxx, r4.xyzx
  72:   dp3 r0.x, r4.xyzx, r4.xyzx
  73:   sqrt r0.x, r0.x
  74:   add r1.w, -r0.x, l(1.000000)
  75:   mul r1.w, r1.w, l(230.831207)
  76:   exp r1.w, r1.w
  77:   dp3 r2.z, cb1[0].xyzx, r4.xyzx
  78:   div r2.z, r2.z, r0.x
  79:   dp3 r2.w, r3.xyzx, r4.xyzx
  80:   div r0.x, r2.w, r0.x
  81:   add r2.z, -r2.z, l(1.000000)
  82:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
  83:   mad r2.w, r2.z, r2.w, l(3.830000)
  84:   mad r2.w, r2.z, r2.w, l(0.459000)
  85:   mad r2.z, r2.z, r2.w, l(-0.002870)
  86:   mul r2.z, r2.z, l(1.442695)
  87:   exp r2.z, r2.z
  88:   add r0.x, -r0.x, l(1.000000)
  89:   mad r2.w, r0.x, l(5.250000), l(-6.800000)
  90:   mad r2.w, r0.x, r2.w, l(3.830000)
  91:   mad r2.w, r0.x, r2.w, l(0.459000)
  92:   mad r0.x, r0.x, r2.w, l(-0.002870)
  93:   mul r0.x, r0.x, l(1.442695)
  94:   exp r0.x, r0.x
  95:   mul r0.x, r0.x, l(0.250000)
  96:   mad r0.x, r2.z, l(0.250000), -r0.x
  97:   mad r0.x, r1.w, r0.x, r0.y
  98:   max r0.x, r0.x, l(0.000000)
  99:   min r0.x, r0.x, l(50.000000)
 100:   mul r4.xyz, r5.xyzx, -r0.xxxx
 101:   mul r4.xyz, r4.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
 102:   exp r4.xyz, r4.xyzx
 103:   mul r0.x, r0.z, r1.w
 104:   mul r0.xyz, r0.xxxx, r4.xyzx
 105:   mad r0.xyz, r6.xyzx, r0.wwww, r0.xyzx
 106:   mul r4.xyz, r1.xyzx, r2.xxxx
 107:   mul r4.xyz, r0.xyzx, r4.xyzx
 108:   mul r0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000)
 109: else 
 110:   min r0.w, r3.y, l(-0.001000)
 111:   div r0.w, l(-0.000100), r0.w
 112:   mad r5.xyz, r0.wwww, r3.xyzx, l(0.000000, 1.000100, 0.000000, 0.000000)
 113:   dp3 r1.w, -r3.xyzx, r5.xyzx
 114:   dp3 r2.z, cb1[0].xyzx, r5.xyzx
 115:   add r1.w, -r1.w, l(1.000000)
 116:   mad r2.w, r1.w, l(5.250000), l(-6.800000)
 117:   mad r2.w, r1.w, r2.w, l(3.830000)
 118:   mad r2.w, r1.w, r2.w, l(0.459000)
 119:   mad r1.w, r1.w, r2.w, l(-0.002870)
 120:   mul r1.w, r1.w, l(1.442695)
 121:   exp r1.w, r1.w
 122:   add r2.z, -r2.z, l(1.000000)
 123:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
 124:   mad r2.w, r2.z, r2.w, l(3.830000)
 125:   mad r2.w, r2.z, r2.w, l(0.459000)
 126:   mad r2.z, r2.z, r2.w, l(-0.002870)
 127:   mul r2.z, r2.z, l(1.442695)
 128:   exp r2.z, r2.z
 129:   mul r5.xy, r1.wwww, l(0.250000, 0.249900, 0.000000, 0.000000)
 130:   mad r1.w, r2.z, l(0.250000), r5.x
 131:   mul r2.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 20.000000)
 132:   mul r5.xzw, r2.zzzz, r3.xxyz
 133:   mad r5.xzw, r5.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 1.000100, 0.000000)
 134:   dp3 r0.w, r5.xzwx, r5.xzwx
 135:   sqrt r0.w, r0.w
 136:   add r0.w, -r0.w, l(1.000000)
 137:   mul r0.w, r0.w, l(230.831207)
 138:   exp r0.w, r0.w
 139:   mad r1.w, r0.w, r1.w, -r5.y
 140:   max r1.w, r1.w, l(0.000000)
 141:   min r1.w, r1.w, l(50.000000)
 142:   mad r5.xyz, r1.xyzx, r2.yyyy, l(0.012566, 0.012566, 0.012566, 0.000000)
 143:   mul r5.xyz, -r1.wwww, r5.xyzx
 144:   mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
 145:   exp r0.xyz, r5.xyzx
 146:   mul r0.w, r2.w, r0.w
 147:   mul r2.yzw, r0.wwww, r0.xxyz
 148:   mad r1.xyz, r1.xyzx, r2.xxxx, l(0.020000, 0.020000, 0.020000, 0.000000)
 149:   mul r4.xyz, r1.xyzx, r2.yzwy
 150: endif 
 151: mad r1.xyz, cb0[4].yzwy, r0.xyzx, r4.xyzx
 152: mul o2.xyz, r1.xyzx, cb0[4].xxxx
 153: dp3 r0.w, cb1[0].xyzx, -r3.xyzx
 154: mul r0.w, r0.w, r0.w
 155: mad r0.w, r0.w, l(0.750000), l(0.750000)
 156: mul r1.xyz, r0.wwww, r4.xyzx
 157: mul o3.xyz, r1.xyzx, cb0[4].xxxx
 158: mul r0.xyz, r0.xyzx, cb0[2].xyzx
 159: mul o4.xyz, r0.xyzx, cb0[4].xxxx
 160: mov o1.xyz, -r3.xyzx
 161: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 15 math, 2 temp registers
Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _SunSize at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: add r0.xyz, v1.xyzx, cb1[0].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: sqrt r0.x, r0.x
   3: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[5].x
   4: mul_sat r0.x, r0.y, r0.x
   5: mad r0.y, r0.x, l(-2.000000), l(3.000000)
   6: mul r0.x, r0.x, r0.x
   7: mad r0.x, -r0.y, r0.x, l(1.000000)
   8: mul r0.x, r0.x, r0.x
   9: mul r0.x, r0.x, l(8000.000000)
  10: mul_sat r0.y, v1.y, l(50.000000)
  11: add r1.xyz, v2.xyzx, -v3.xyzx
  12: mad r0.yzw, r0.yyyy, r1.xxyz, v3.xxyz
  13: mad r1.xyz, r0.xxxx, v4.xyzx, r0.yzwy
  14: lt r0.x, v1.y, l(0.000000)
  15: movc o0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
  16: mov o0.w, l(1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: _SUNDISK_HIGH_QUALITY 
-- Vertex shader for "d3d9":
// Stats: 175 math, 5 branches
Uses vertex data channel "Vertex"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Float _AtmosphereThickness at 13
Float _Exposure at 10
Vector4 _GroundColor at 11
Vector4 _LightColor0 at 9
Vector4 _SkyTint at 12
Vector4 _WorldSpaceLightPos0 at 8

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _AtmosphereThickness;
//   float _Exposure;
//   float3 _GroundColor;
//   float4 _LightColor0;
//   float3 _SkyTint;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   _WorldSpaceLightPos0 c8       1
//   _LightColor0         c9       1
//   _Exposure            c10      1
//   _GroundColor         c11      1
//   _SkyTint             c12      1
//   _AtmosphereThickness c13      1
//

    vs_3_0
    def c14, 0.5, 0.419999987, 0.324999988, 0.0506249666
    def c15, 0.300000012, 0.300000042, 0.049999997, 0.0314159282
    def c16, 0.5, 20, 0, 1.00010002
    def c17, -0.00286999997, 1.44269502, 0.246031836, 230.831207
    def c18, 5.25, -6.80000019, 3.82999992, 0.458999991
    def c19, 0.25, 50, 0.0125663709, 0.0199999996
    def c20, -0.00100000005, -9.99999975e-005, -4.99999987e-005, -0.00199999986
    def c21, 0.25, 0.249900013, 0.75, 0
    def c22, 1, 0, 0.454545468, 2.5
    dcl_position v0
    dcl_position o0
    dcl_texcoord o1.xyz
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r8.x, c4, r1
    dp4 r8.y, c5, r1
    dp4 r8.z, c6, r1
    dp4 r8.w, c7, r1
    log r0.x, c12.x
    log r0.y, c12.y
    log r0.z, c12.z
    mul r0.xyz, r0, c22.z
    exp r1.x, r0.x
    exp r1.y, r0.y
    exp r1.z, r0.z
    add r0.xyz, -r1, c22.x
    mov r1.xy, c15
    mad r0.xyz, r0, r1.xyxw, c14
    mul r0.xyz, r0, r0
    mul r0.xyz, r0, r0
    rcp r1.x, r0.x
    rcp r1.y, r0.y
    rcp r1.z, r0.z
    mov r0.w, c22.w
    pow r1.w, c13.x, r0.w
    mul r0.xy, r1.w, c15.zwzw
    dp3 r2.x, c0, v0
    dp3 r2.y, c1, v0
    dp3 r2.z, c2, v0
    dp3 r0.z, r2, r2
    rsq r0.z, r0.z
    mul r2.xzw, r0.z, r2.yyxz
    if_ge r2.x, c22.y
      mad r0.w, r2.x, r2.x, c14.w
      rsq r0.w, r0.w
      rcp r0.w, r0.w
      mad r0.z, r2.y, -r0.z, r0.w
      add r0.w, -r2.x, c22.x
      mad r1.w, r0.w, c18.x, c18.y
      mad r1.w, r0.w, r1.w, c18.z
      mad r1.w, r0.w, r1.w, c18.w
      mad r0.w, r0.w, r1.w, c17.x
      mul r0.w, r0.w, c17.y
      exp r0.w, r0.w
      mul r3.xy, r0.z, c16
      mul r4.xyz, r2.zxww, r3.x
      mad r4.xyz, r4, c16.x, c16.zwzw
      dp3 r0.z, r4, r4
      rsq r0.z, r0.z
      rcp r1.w, r0.z
      add r1.w, -r1.w, c22.x
      mul r1.w, r1.w, c17.w
      exp r1.w, r1.w
      dp3 r2.y, c8, r4
      dp3 r3.z, r2.zxww, r4
      mad r2.y, r2.y, -r0.z, c22.x
      mad r3.w, r2.y, c18.x, c18.y
      mad r3.w, r2.y, r3.w, c18.z
      mad r3.w, r2.y, r3.w, c18.w
      mad r2.y, r2.y, r3.w, c17.x
      mul r2.y, r2.y, c17.y
      exp r2.y, r2.y
      mad r0.z, r3.z, -r0.z, c22.x
      mad r3.z, r0.z, c18.x, c18.y
      mad r3.z, r0.z, r3.z, c18.z
      mad r3.z, r0.z, r3.z, c18.w
      mad r0.z, r0.z, r3.z, c17.x
      mul r0.zw, r0, c17.xyyz
      exp r0.z, r0.z
      mul r0.z, r0.z, c19.x
      mad r0.z, r2.y, c19.x, -r0.z
      mad r0.z, r1.w, r0.z, r0.w
      max r0.z, r0.z, c22.y
      min r0.z, r0.z, c19.y
      mad r5.xyz, r1, r0.y, c19.z
      mul r6.xyz, -r0.z, r5
      mul r6.xyz, r6, c17.y
      exp r7.x, r6.x
      exp r7.y, r6.y
      exp r7.z, r6.z
      mul r0.z, r3.y, r1.w
      mad r3.xzw, r2.zyxw, r3.x, r4.xyyz
      dp3 r1.w, r3.xzww, r3.xzww
      rsq r1.w, r1.w
      rcp r2.y, r1.w
      add r2.y, -r2.y, c22.x
      mul r2.y, r2.y, c17.w
      exp r2.y, r2.y
      dp3 r4.x, c8, r3.xzww
      dp3 r3.x, r2.zxww, r3.xzww
      mad r3.z, r4.x, -r1.w, c22.x
      mad r3.w, r3.z, c18.x, c18.y
      mad r3.w, r3.z, r3.w, c18.z
      mad r3.w, r3.z, r3.w, c18.w
      mad r3.z, r3.z, r3.w, c17.x
      mul r3.z, r3.z, c17.y
      exp r3.z, r3.z
      mad r1.w, r3.x, -r1.w, c22.x
      mad r3.x, r1.w, c18.x, c18.y
      mad r3.x, r1.w, r3.x, c18.z
      mad r3.x, r1.w, r3.x, c18.w
      mad r1.w, r1.w, r3.x, c17.x
      mul r1.w, r1.w, c17.y
      exp r1.w, r1.w
      mul r1.w, r1.w, c19.x
      mad r1.w, r3.z, c19.x, -r1.w
      mad r0.w, r2.y, r1.w, r0.w
      max r0.w, r0.w, c22.y
      min r0.w, r0.w, c19.y
      mul r3.xzw, r5.xyyz, -r0.w
      mul r3.xzw, r3, c17.y
      exp r4.x, r3.x
      exp r4.y, r3.z
      exp r4.z, r3.w
      mul r0.w, r3.y, r2.y
      mul r3.xyz, r0.w, r4
      mad r3.xyz, r7, r0.z, r3
      mul r4.xyz, r0.x, r1
      mul r4.xyz, r3, r4
      mul r3.xyz, r3, c19.w
    else
      min r0.z, r2.x, c20.x
      rcp r0.z, r0.z
      mul r5.xyz, r0.z, c20.yzww
      mad r6.xyz, r5.x, r2.zxww, c16.zwzw
      dp3 r0.z, -r2.zxww, r6
      dp3 r0.w, c8, r6
      add r0.zw, -r0, c22.x
      mad r1.w, r0.z, c18.x, c18.y
      mad r1.w, r0.z, r1.w, c18.z
      mad r1.w, r0.z, r1.w, c18.w
      mad r0.z, r0.z, r1.w, c17.x
      mul r0.z, r0.z, c17.y
      exp r0.z, r0.z
      mad r1.w, r0.w, c18.x, c18.y
      mad r1.w, r0.w, r1.w, c18.z
      mad r1.w, r0.w, r1.w, c18.w
      mad r0.w, r0.w, r1.w, c17.x
      mul r0.w, r0.w, c17.y
      exp r0.w, r0.w
      mul r5.xw, r0.z, c21.xyzy
      mad r0.z, r0.w, c19.x, r5.x
      mul r6.xyz, r2.zxww, r5.y
      mad r6.xyz, r6, c16.x, c16.zwzw
      dp3 r0.w, r6, r6
      rsq r0.w, r0.w
      rcp r0.w, r0.w
      add r0.w, -r0.w, c22.x
      mul r0.w, r0.w, c17.w
      exp r0.w, r0.w
      mad r0.z, r0.w, r0.z, -r5.w
      max r0.z, r0.z, c22.y
      min r0.z, r0.z, c19.y
      mad r5.xyw, r1.xyzz, r0.y, c19.z
      mul r5.xyw, -r0.z, r5
      mul r5.xyw, r5, c17.y
      exp r6.x, r5.x
      exp r6.y, r5.y
      exp r6.z, r5.w
      mul r0.y, r5.z, r0.w
      mul r0.yzw, r0.y, r6.xxyz
      mad r1.xyz, r1, r0.x, c19.w
      mul r4.xyz, r0.yzww, r1
      min r3.xyz, r6, c22.x
    endif
    mov o1.xyz, -v0
    mad r0.xyz, c11, r3, r4
    mul o2.xyz, r0, c10.x
    dp3 r0.x, c8.yxzw, -r2.xzww
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c21.z, c21.z
    mul r0.xyz, r0.x, r4
    mul o3.xyz, r0, c10.x
    mul r0.xyz, r3, c9
    mul o4.xyz, r0, c10.x
    mad o0.xy, r8.w, c255, r8
    mov o0.zw, r8

// approximately 182 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 29 math
Matrix4x3 unity_ObjectToWorld at 0
Float _SunSize at 4
Vector4 _WorldSpaceLightPos0 at 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _SunSize;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       3
//   _WorldSpaceLightPos0 c3       1
//   _SunSize             c4       1
//

    ps_3_0
    def c5, 50, -1.98000002, 1.98010004, 0.649999976
    def c6, 10, -9.99999975e-005, 1, 0.0100164423
    def c7, 10000, 0, 0, 0
    dcl_texcoord v0.xyz
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    mov r0.w, c5.w
    pow_pp r1.x, c4.x, r0.w
    mul_pp r0.x, r1.x, c6.x
    dp3 r1.x, c0, v0
    dp3 r1.y, c1, v0
    dp3 r1.z, c2, v0
    nrm_pp r2.xyz, r1
    dp3_pp r0.y, c3, r2
    mad_pp r0.z, r0.y, -c5.y, c5.z
    mad_pp r0.y, r0.y, r0.y, c6.z
    mul_pp r0.y, r0.y, c6.w
    pow_pp r1.x, r0.z, r0.x
    add r0.x, r1.x, c6.y
    rcp r0.z, r1.x
    cmp r0.x, r0.x, r0.z, c7.x
    mul_pp r0.x, r0.x, r0.y
    mul_sat_pp r0.y, r2.y, c5.x
    mov r1.xyz, v2
    add_pp r1.xyz, -r1, v1
    mad_pp r0.yzw, r0.y, r1.xxyz, v2.xxyz
    mad_pp r1.xyz, r0.x, v3, r0.yzww
    cmp_pp oC0.xyz, r2.y, r0.yzww, r1
    mov_pp oC0.w, c6.z

// approximately 29 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 158 math, 7 temp registers, 2 branches
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _Exposure at 64
  Vector3 _GroundColor at 68
  Vector3 _SkyTint at 84
  Float _AtmosphereThickness at 96
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   5: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   8: log r1.xyz, cb0[5].yzwy
   9: mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
  10: exp r1.xyz, r1.xyzx
  11: add r1.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  12: mad r1.xyz, r1.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), l(0.500000, 0.420000, 0.325000, 0.000000)
  13: mul r1.xyz, r1.xyzx, r1.xyzx
  14: mul r1.xyz, r1.xyzx, r1.xyzx
  15: div r1.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzx
  16: log r0.w, cb0[6].x
  17: mul r0.w, r0.w, l(2.500000)
  18: exp r0.w, r0.w
  19: mul r2.xy, r0.wwww, l(0.050000, 0.031416, 0.000000, 0.000000)
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: rsq r0.w, r0.w
  22: mul r3.xyz, r0.wwww, r0.xyzx
  23: ge r0.x, r3.y, l(0.000000)
  24: if_nz r0.x
  25:   mad r0.x, r3.y, r3.y, l(0.050625)
  26:   sqrt r0.x, r0.x
  27:   mad r0.x, -r0.y, r0.w, r0.x
  28:   mad r0.y, -r3.y, l(1.000000), l(1.000000)
  29:   mad r0.z, r0.y, l(5.250000), l(-6.800000)
  30:   mad r0.z, r0.y, r0.z, l(3.830000)
  31:   mad r0.z, r0.y, r0.z, l(0.459000)
  32:   mad r0.y, r0.y, r0.z, l(-0.002870)
  33:   mul r0.y, r0.y, l(1.442695)
  34:   exp r0.y, r0.y
  35:   mul r0.xyz, r0.xyxx, l(0.500000, 0.246032, 20.000000, 0.000000)
  36:   mul r4.xyz, r0.xxxx, r3.xyzx
  37:   mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.000000, 1.000100, 0.000000, 0.000000)
  38:   dp3 r0.w, r4.xyzx, r4.xyzx
  39:   sqrt r0.w, r0.w
  40:   add r1.w, -r0.w, l(1.000000)
  41:   mul r1.w, r1.w, l(230.831207)
  42:   exp r1.w, r1.w
  43:   dp3 r2.z, cb1[0].xyzx, r4.xyzx
  44:   div r2.z, r2.z, r0.w
  45:   dp3 r2.w, r3.xyzx, r4.xyzx
  46:   div r0.w, r2.w, r0.w
  47:   add r2.z, -r2.z, l(1.000000)
  48:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
  49:   mad r2.w, r2.z, r2.w, l(3.830000)
  50:   mad r2.w, r2.z, r2.w, l(0.459000)
  51:   mad r2.z, r2.z, r2.w, l(-0.002870)
  52:   mul r2.z, r2.z, l(1.442695)
  53:   exp r2.z, r2.z
  54:   add r0.w, -r0.w, l(1.000000)
  55:   mad r2.w, r0.w, l(5.250000), l(-6.800000)
  56:   mad r2.w, r0.w, r2.w, l(3.830000)
  57:   mad r2.w, r0.w, r2.w, l(0.459000)
  58:   mad r0.w, r0.w, r2.w, l(-0.002870)
  59:   mul r0.w, r0.w, l(1.442695)
  60:   exp r0.w, r0.w
  61:   mul r0.w, r0.w, l(0.250000)
  62:   mad r0.w, r2.z, l(0.250000), -r0.w
  63:   mad r0.w, r1.w, r0.w, r0.y
  64:   max r0.w, r0.w, l(0.000000)
  65:   min r0.w, r0.w, l(50.000000)
  66:   mad r5.xyz, r1.xyzx, r2.yyyy, l(0.012566, 0.012566, 0.012566, 0.000000)
  67:   mul r6.xyz, -r0.wwww, r5.xyzx
  68:   mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  69:   exp r6.xyz, r6.xyzx
  70:   mul r0.w, r0.z, r1.w
  71:   mad r4.xyz, r3.xyzx, r0.xxxx, r4.xyzx
  72:   dp3 r0.x, r4.xyzx, r4.xyzx
  73:   sqrt r0.x, r0.x
  74:   add r1.w, -r0.x, l(1.000000)
  75:   mul r1.w, r1.w, l(230.831207)
  76:   exp r1.w, r1.w
  77:   dp3 r2.z, cb1[0].xyzx, r4.xyzx
  78:   div r2.z, r2.z, r0.x
  79:   dp3 r2.w, r3.xyzx, r4.xyzx
  80:   div r0.x, r2.w, r0.x
  81:   add r2.z, -r2.z, l(1.000000)
  82:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
  83:   mad r2.w, r2.z, r2.w, l(3.830000)
  84:   mad r2.w, r2.z, r2.w, l(0.459000)
  85:   mad r2.z, r2.z, r2.w, l(-0.002870)
  86:   mul r2.z, r2.z, l(1.442695)
  87:   exp r2.z, r2.z
  88:   add r0.x, -r0.x, l(1.000000)
  89:   mad r2.w, r0.x, l(5.250000), l(-6.800000)
  90:   mad r2.w, r0.x, r2.w, l(3.830000)
  91:   mad r2.w, r0.x, r2.w, l(0.459000)
  92:   mad r0.x, r0.x, r2.w, l(-0.002870)
  93:   mul r0.x, r0.x, l(1.442695)
  94:   exp r0.x, r0.x
  95:   mul r0.x, r0.x, l(0.250000)
  96:   mad r0.x, r2.z, l(0.250000), -r0.x
  97:   mad r0.x, r1.w, r0.x, r0.y
  98:   max r0.x, r0.x, l(0.000000)
  99:   min r0.x, r0.x, l(50.000000)
 100:   mul r4.xyz, r5.xyzx, -r0.xxxx
 101:   mul r4.xyz, r4.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
 102:   exp r4.xyz, r4.xyzx
 103:   mul r0.x, r0.z, r1.w
 104:   mul r0.xyz, r0.xxxx, r4.xyzx
 105:   mad r0.xyz, r6.xyzx, r0.wwww, r0.xyzx
 106:   mul r4.xyz, r1.xyzx, r2.xxxx
 107:   mul r4.xyz, r0.xyzx, r4.xyzx
 108:   mul r0.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000)
 109: else 
 110:   min r0.w, r3.y, l(-0.001000)
 111:   div r0.w, l(-0.000100), r0.w
 112:   mad r5.xyz, r0.wwww, r3.xyzx, l(0.000000, 1.000100, 0.000000, 0.000000)
 113:   dp3 r1.w, -r3.xyzx, r5.xyzx
 114:   dp3 r2.z, cb1[0].xyzx, r5.xyzx
 115:   add r1.w, -r1.w, l(1.000000)
 116:   mad r2.w, r1.w, l(5.250000), l(-6.800000)
 117:   mad r2.w, r1.w, r2.w, l(3.830000)
 118:   mad r2.w, r1.w, r2.w, l(0.459000)
 119:   mad r1.w, r1.w, r2.w, l(-0.002870)
 120:   mul r1.w, r1.w, l(1.442695)
 121:   exp r1.w, r1.w
 122:   add r2.z, -r2.z, l(1.000000)
 123:   mad r2.w, r2.z, l(5.250000), l(-6.800000)
 124:   mad r2.w, r2.z, r2.w, l(3.830000)
 125:   mad r2.w, r2.z, r2.w, l(0.459000)
 126:   mad r2.z, r2.z, r2.w, l(-0.002870)
 127:   mul r2.z, r2.z, l(1.442695)
 128:   exp r2.z, r2.z
 129:   mul r5.xy, r1.wwww, l(0.250000, 0.249900, 0.000000, 0.000000)
 130:   mad r1.w, r2.z, l(0.250000), r5.x
 131:   mul r2.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 20.000000)
 132:   mul r5.xzw, r2.zzzz, r3.xxyz
 133:   mad r5.xzw, r5.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 1.000100, 0.000000)
 134:   dp3 r0.w, r5.xzwx, r5.xzwx
 135:   sqrt r0.w, r0.w
 136:   add r0.w, -r0.w, l(1.000000)
 137:   mul r0.w, r0.w, l(230.831207)
 138:   exp r0.w, r0.w
 139:   mad r1.w, r0.w, r1.w, -r5.y
 140:   max r1.w, r1.w, l(0.000000)
 141:   min r1.w, r1.w, l(50.000000)
 142:   mad r5.xyz, r1.xyzx, r2.yyyy, l(0.012566, 0.012566, 0.012566, 0.000000)
 143:   mul r5.xyz, -r1.wwww, r5.xyzx
 144:   mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
 145:   exp r0.xyz, r5.xyzx
 146:   mul r0.w, r2.w, r0.w
 147:   mul r2.yzw, r0.wwww, r0.xxyz
 148:   mad r1.xyz, r1.xyzx, r2.xxxx, l(0.020000, 0.020000, 0.020000, 0.000000)
 149:   mul r4.xyz, r1.xyzx, r2.yzwy
 150: endif 
 151: mov o1.xyz, -v0.xyzx
 152: mad r1.xyz, cb0[4].yzwy, r0.xyzx, r4.xyzx
 153: mul o2.xyz, r1.xyzx, cb0[4].xxxx
 154: dp3 r0.w, cb1[0].xyzx, -r3.xyzx
 155: mul r0.w, r0.w, r0.w
 156: mad r0.w, r0.w, l(0.750000), l(0.750000)
 157: mul r1.xyz, r0.wwww, r4.xyzx
 158: mul o3.xyz, r1.xyzx, cb0[4].xxxx
 159: mul r0.xyz, r0.xyzx, cb0[2].xyzx
 160: mul o4.xyz, r0.xyzx, cb0[4].xxxx
 161: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 23 math, 2 temp registers
Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _SunSize at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[3], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: log r0.x, cb0[5].x
   1: mul r0.x, r0.x, l(0.650000)
   2: exp r0.x, r0.x
   3: mul r0.yzw, v1.yyyy, cb2[1].xxyz
   4: mad r0.yzw, cb2[0].xxyz, v1.xxxx, r0.yyzw
   5: mad r0.yzw, cb2[2].xxyz, v1.zzzz, r0.yyzw
   6: dp3 r1.x, r0.yzwy, r0.yzwy
   7: rsq r1.x, r1.x
   8: mul r0.yzw, r0.yyzw, r1.xxxx
   9: dp3 r0.y, cb1[0].xyzx, r0.yzwy
  10: mad r0.w, -r0.y, l(-1.980000), l(1.980100)
  11: mad r0.y, r0.y, r0.y, l(1.000000)
  12: mul r0.xy, r0.xyxx, l(10.000000, 0.010016, 0.000000, 0.000000)
  13: log r0.w, r0.w
  14: mul r0.x, r0.w, r0.x
  15: exp r0.x, r0.x
  16: max r0.x, r0.x, l(0.000100)
  17: div r0.x, r0.y, r0.x
  18: mul_sat r0.y, r0.z, l(50.000000)
  19: lt r0.z, r0.z, l(0.000000)
  20: add r1.xyz, v2.xyzx, -v3.xyzx
  21: mad r1.xyz, r0.yyyy, r1.xyzx, v3.xyzx
  22: mad r0.xyw, r0.xxxx, v4.xyxz, r1.xyxz
  23: movc o0.xyz, r0.zzzz, r0.xywx, r1.xyzx
  24: mov o0.w, l(1.000000)
  25: ret 
// Approximately 0 instruction slots used


 }
}
Fallback Off
}